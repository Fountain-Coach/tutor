import Foundation

public func makeLilyPondDuo(melodyFreqs: [Double], durations: [Double], bassRootHz: Double, tempoBPM: Int = 120) -> String {
    func midi(for freq: Double) -> Int { guard freq > 0 else { return 60 }; return Int((69.0 + 12.0 * log2(freq / 440.0)).rounded()) }
    let names = ["c","cis","d","dis","e","f","fis","g","gis","a","ais","b"]
    func lilyName(for midiNote: Int) -> String {
        let pc = (midiNote % 12 + 12) % 12
        let base = names[pc]
        let d = (midiNote - 60) / 12
        if d >= 0 { return base + String(repeating: "'", count: d + 1) }
        else { return base + String(repeating: ",", count: -d - 1) }
    }
    // duration tokens with dotted support
    let quarter = 60.0 / Double(tempoBPM)
    let denoms: [Int] = [1,2,4,8,16]
    struct Cand { let ratio: Double; let label: String }
    func lilyDurToken(for sec: Double) -> String {
        let ratio = sec / quarter
        var best = Cand(ratio: Double.greatestFiniteMagnitude, label: "4")
        var bestDiff = Double.greatestFiniteMagnitude
        for d in denoms {
            let base = 4.0 / Double(d)
            let plain = Cand(ratio: base, label: String(d))
            let dotted = Cand(ratio: base * 1.5, label: String(d) + ".")
            for c in [plain, dotted] {
                let diff = abs(ratio - c.ratio)
                if diff < bestDiff { bestDiff = diff; best = c }
            }
        }
        return best.label
    }

    // melody line tokens
    let melody = zip(melodyFreqs, durations).map { (f, d) -> String in
        let n = lilyName(for: midi(for: f))
        let t = lilyDurToken(for: d)
        return "\(n)\(t)"
    }.joined(separator: " ")

    // bass: pedal tone for total duration of phrase
    let total = durations.reduce(0, +)
    let bassName = lilyName(for: midi(for: bassRootHz))
    let bassToken = lilyDurToken(for: total)
    let bass = "\(bassName)\(bassToken)"

    let header = """
    % Generated by HelloCsound duo export
    \\version "2.24.0"
    \\header { title = "Motif + Pedal" tagline = "FountainAI • Csound • LilyPond" }
    """
    let tempo = "\\tempo 4 = \(tempoBPM)"
    // Two voices in one staff
    let body = "<< \n  { \n    \(tempo) \n    \(melody) \n  } \\ \n  { \n    \(bass) \n  } \n>>"
    return [header, body].joined(separator: "\n")
}
