import Foundation

public func makeLilyPond(frequencies: [Double], durations: [Double], tempoBPM: Int = 120) -> String {
    // Map frequencies to nearest MIDI and then to LilyPond note names
    func midi(for freq: Double) -> Int {
        guard freq > 0 else { return 60 }
        return Int((69.0 + 12.0 * log2(freq / 440.0)).rounded())
    }
    let names = ["c","cis","d","dis","e","f","fis","g","gis","a","ais","b"]
    func lilyName(for midiNote: Int) -> String {
        let pc = (midiNote % 12 + 12) % 12
        let base = names[pc]
        // LilyPond: c' is middle C (MIDI 60). Compute relative marks.
        let d = (midiNote - 60) / 12 // integer division toward zero
        if d >= 0 {
            return base + String(repeating: "'", count: d + 1)
        } else {
            return base + String(repeating: ",", count: -d - 1)
        }
    }
    // Map durations in seconds to nearest LilyPond duration token (supports dotted)
    // assuming quarter note = 60/tempo seconds
    let quarter = 60.0 / Double(tempoBPM)
    let denoms: [Int] = [1,2,4,8,16]
    struct Cand { let ratio: Double; let label: String }
    func lilyDurToken(for sec: Double) -> String {
        let ratio = sec / quarter // in quarters
        var best = Cand(ratio: Double.greatestFiniteMagnitude, label: "4")
        var bestDiff = Double.greatestFiniteMagnitude
        for d in denoms {
            let base = 4.0 / Double(d)           // whole=1, half=2, quarter=4, etc.
            let plain = Cand(ratio: base, label: String(d))
            let dotted = Cand(ratio: base * 1.5, label: String(d) + ".")
            for c in [plain, dotted] {
                let diff = abs(ratio - c.ratio)
                if diff < bestDiff { bestDiff = diff; best = c }
            }
        }
        return best.label
    }
    let notes = zip(frequencies, durations).map { (f, d) -> String in
        let n = lilyName(for: midi(for: f))
        let token = lilyDurToken(for: d)
        return "\(n)\(token)"
    }.joined(separator: " ")
    let header = """
    % Generated by HelloCsound motif export
    \\version "2.24.0"
    \\header { title = "Motif" tagline = "FountainAI • Csound • LilyPond" }
    """
    let tempo = "\\tempo 4 = \(tempoBPM)"
    let body = "{ \n  \(tempo) \n  \(notes) \n}"
    return [header, body].joined(separator: "\n")
}
